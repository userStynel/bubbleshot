<!DOCTYPE html>
<html>
    <header>
        <title>Hit the Stone</title>
        <link href = "/style/game.css" rel = "stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js" integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf" crossorigin="anonymous"></script>
        <meta name="viewport" content="width=device-width, initial-scale=1">
    </header>
    <body>
        <div class = "container-fluid">
            <header>
                <div class = "row bg-dark text-white text-center" style = "padding:10px;">
                    <div class = "col-10">
                        <h5 class = "align-middle">ðŸ¥Œ Bubble Shot!</h5>
                    </div>
                </div>
            </header>
        </div>
        <% if(!session.user){%>
            <div class="alert alert-danger" role="alert">
                If you want to play this game, You should login first!<br><a href="/" class="alert-link">Go to main</a>
            </div>
        <% } else{%>
        <div class="progress" style = "width: 25%">
            <div id = "hpbar" class="progress-bar bg-danger" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100</div>
        </div>
        <div style = "display:flex;" id = 'browntiggerfather'>
            <canvas id = 'canvas'></canvas>
            <div id = 'browntigger'>
                <div><h3 style = "text-align: center;">Chatroom</h3></div>
                <div>
                    <ul id = "chatBox">
                    </ul>
                </div>
                <div>
                    <form action = "javascript:sendMessage()">
                        <input type = "text" id = "text" autocomplete="off">
                        <input type = "submit" class = "btn btn-success" value = 'send'>
                    </form>
                </div>
            </div>
        </div>
        <script>
            var nickname = "<%= session.user.nickname %>";
            function serverDisconnect(){
                let canvas = document.getElementById('canvas');
                let bt = document.getElementById('browntigger');
                let btfather = document.getElementById('browntiggerfather');
                let warn = document.createElement('div');
                warn.setAttribute('class', 'alert alert-danger');
                warn.textContent = 'It\'s problem to connecting server';
                canvas.style.display = 'none';
                bt.style.display = 'none';
                btfather.appendChild(warn);
            }
        </script>
        
        <script src = "/script/socket.io.js"></script>
        <script>
            var text = document.getElementById('text');
            var chatBox = document.getElementById('chatBox');
            var sendBtn = document.getElementById('sendBtn');
            var canvas = document.getElementById('canvas');
            var hpbar = document.getElementById('hpbar');
            var socket = io();
            var myInfo;
            var othersInfo;

            function hpbarDraw(){
                hpbar.setAttribute('aria-valuenow', player.health);
                hpbar.setAttribute('style', `width: ${player.health}%`);
                hpbar.textContent = player.health;
            }

            canvas.addEventListener('click', (e)=>{
                let mousePointer = new Vector2(e.offsetX, e.offsetY);
                let dir = mousePointer.sub(player.pos).unit();
                let bullet = new Bullet(player.pos.x, player.pos.y, dir.x, dir.y, player.nickname);
                console.log(bullet);
                socket.emit('shooting', JSON.stringify(bullet));
            });

            document.body.addEventListener('keydown', (e)=>{
                if(text !== document.activeElement && (e.keyCode == 37 || e.keyCode == 38 || e.keyCode == 39 || e.keyCode == 40 || e.keyCode ==  87 || e.keyCode == 65 || e.keyCode == 83 || e.keyCode == 68))  
                    socket.emit('moving', e.keyCode);
            });

            function sendMessage(){
                if(text.value){
                    var message_node = {nickname: nickname, message: text.value};
                    socket.emit('chatting', message_node);
                    text.value = '';
                }
            }

            socket.on('connect', ()=>{
                socket.emit('initial', nickname);
            });

            socket.on('disconnect', ()=>{
                serverDisconnect();
                socket.close();
            });
            
            socket.on('initialsetting', (setting)=>{
                console.log(setting);
                myInfo = setting.me;
                othersInfo = setting.other;
                player = new Player(myInfo.x, myInfo.y, nickname, myInfo.color);
                //drawBG();
                ctx.save();
                ctx.translate(setting.me.x-canvas.width/2,setting.me.y-canvas.height/2);
                app.runLoop();
                player.draw();
                
                for(let key of Object.keys(othersInfo)){
                    let other = othersInfo[key];
                    let op = new Player(other.x, other.y, '', other.color);
                    op.draw();
                }
                ctx.restore();
            });

            socket.on('chat', function(message_node){
                let itembox = document.querySelectorAll('#chatBox li');
                let item = document.createElement('li');
                if(itembox.length == 15)
                    itembox[0].remove();
                item.textContent = `${message_node.nickname}: ${message_node.message}`;
                chatBox.appendChild(item);
            });

            socket.on('update', (setting)=>{
                //drawBG();
                ctx.save();
                ctx.translate(setting.me.x-canvas.width/2,setting.me.y-canvas.height/2);
                app.runLoop();
                player.setPos(setting.me.x, setting.me.y);
                player.setHealth(setting.me.health);
                player.draw();
                hpbarDraw();
                othersInfo = setting.other;
                for(let key of Object.keys(othersInfo)){
                    let other = othersInfo[key];
                    let op = new Player(other.x, other.y, '', other.color);
                    op.draw();
                }
                for(let bullet of setting.bullet){
                    let bo = new Bullet(bullet.pos.x, bullet.pos.y, bullet.dir.x, bullet.dir.y, bullet.owner);
                    bo.draw();
                }
                ctx.restore();
            });

            // socket.on('newuser', (setting)=>{
            //     othersInfo[setting.nickname] = setting;
            //     var other = new Player(setting.x, setting.y, 'other', setting.color);
            //     other.draw();
            // });
            
            // socket.on('exit', (client_info)=>{
            //     delete othersInfo[client_info.nickname];
            //     drawBG();
            //     player.draw();
            //     for(var other of othersInfo){
            //         var op = new Player(other.x, other.y, 'other', other.color);
            //         op.draw();
            //     }
            // });
        </script>
        <script src = "/script/character.js"></script>
        <script src = "/script/game.js"></script>
        <script src="/script/mapgen/constant.js"></script>
        <script type="text/javascript" src="/script/mapgen/math.js"></script>
        <script type="text/javascript" src="/script/mapgen/noisegenerator.js"></script>
        <script type="text/javascript" src="/script/mapgen/terraingenerator.js"></script>
        <script type="text/javascript" src="/script/mapgen/mesh.js"></script>
        <script type="text/javascript" src="/script/mapgen/pixel.js"></script>
        <script type="text/javascript" src="/script/mapgen/chunk.js"></script>
        <script type="text/javascript" src="/script/mapgen/chunkmanager.js"></script>
        <script type="text/javascript" src="/script/mapgen/world.js"></script>
        <script type="text/javascript" src="/script/mapgen/renderer.js"></script>
        <script type="text/javascript" src="/script/mapgen/application.js"></script>
        <script type="text/javascript" src="/script/mapgen/main.js"></script>
        <% }%>
    </body>
</html>